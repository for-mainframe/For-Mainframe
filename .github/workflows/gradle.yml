# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  workflow_dispatch:

permissions:
  contents: read

defaults:
  run:
    workspace:
      name: ${{ github.run_id }}-${{ github.workflow }}-${{ github.job }}-${{ github.sha }}

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout of github repository
      uses: actions/checkout@v3

    # Looks like redundant
    # - name: Setup of environment
    #   uses: ./.github/actions/setup

    - name: Check repository content
      shell: bash
      run: pwd && ls -la

    - name: Cache Gradle packages
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle

  build:
    runs-on: ubuntu-latest
    needs: [prepare]
    steps:
    - name: Build plugin
      env:
        PUBLISH_TOKEN: ${{ secrets.INTELLIJ_SIGNING_PUBLISH_TOKEN }}
        CERTIFICATE_CHAIN: ${{ secrets.INTELLIJ_SIGNING_CERTIFICATE_CHAIN }}
        PRIVATE_KEY: ${{ secrets.INTELLIJ_SIGNING_PRIVATE_KEY }}
        PRIVATE_KEY_PASSWORD: ${{ secrets.INTELLIJ_SIGNING_PRIVATE_KEY_PASSWORD }}
      shell: bash
      run: ./gradlew signPlugin

  tests:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - name: Run tests
      run: ./gradlew test
      shell: bash

  verify:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - name: Verify plugin against IntelliJ IDEA IDE's
      shell: bash
      run: ./gradlew runPluginVerifier

  sonar:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - name: SonarCloud scans
      uses: ./.github/actions/sonar
      env:
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

  artifacts:
    runs-on: ubuntu-latest
    needs: [build]
    steps:

    - name: Set Artifact Name
      shell: bash
      run: ./gradlew setArtifactNameForGitHubAction

    - name: Publish built plugin to artifacts
      uses: actions/upload-artifact@v4
      with:
        name: for-mainframe-build
        path: ./build/distributions/
