# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout of github repository
      uses: actions/checkout@v3

    # Looks like redundant
    # - name: Setup of environment
    #   uses: ./.github/actions/setup

    - name: Cache Gradle packages
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle

    - name: Check repository content
      shell: bash
      run: pwd && ls -la

    - name: Build plugin
      env:
        PUBLISH_TOKEN: ${{ secrets.INTELLIJ_SIGNING_PUBLISH_TOKEN }}
        CERTIFICATE_CHAIN: ${{ secrets.INTELLIJ_SIGNING_CERTIFICATE_CHAIN }}
        PRIVATE_KEY: ${{ secrets.INTELLIJ_SIGNING_PRIVATE_KEY }}
        PRIVATE_KEY_PASSWORD: ${{ secrets.INTELLIJ_SIGNING_PRIVATE_KEY_PASSWORD }}
      shell: bash
      run: ./gradlew signPlugin

    # - name: Run tests
    #   run: ./gradlew test
    #   shell: bash

    - name: Verify plugin against IntelliJ IDEA IDE's
      if: contains(github.ref, 'release')
      shell: bash
      run: ./gradlew runPluginVerifier

    - name: SonarCloud scans
      continue-on-error: true
      uses: ./.github/actions/sonar
      env:
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

    - name: Publish built plugin to artifacts
      uses: actions/upload-artifact@v4
      with:
        name: for-mainframe-build
        path: ./build/distributions/
