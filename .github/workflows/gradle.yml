# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout of github repository
      uses: actions/checkout@v3

    - name: Setup of environment
      uses: ./.github/actions/setup

    - name: Check repopository content
      run: pwd && ls -la
      shell: bash

    - name: Cache Gradle packages
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle

    - name: Build with Gradle
      run: gradle wrapper && ./gradlew buildPlugin
      shell: bash

    - name: Publish built plugin
      uses: actions/upload-artifact@v3
      with:
        name: builtPlugin
        path: ./build/distributions/

#    - name: Sonarcloud scans
#      uses: ./.github/actions/sonar
#      env:
#        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}


  deploy:
    needs: build

#    permissions:
#      pages: write
#      id-token: write

    runs-on: XBY_IJMP_machine

    concurrency: test
    environment:
      name: test
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Check current directory
      shell: bash
      run: pwd && ls -la

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: builtPlugin
        path: ./build/distributions/

    - name: Check plugin built availability
      shell: bash
      run: ls -la ./build/distributions

    - name: Creating random name for file
      shell: bash
      run: echo $RANDOM | md5sum | head -c 20; echo

    - name: Move built plugin to shared repository
      shell: bash
      run: grep -lir 'for-mainframe' build | xargs mv -t /root/pluginBuilds/$RANDOM.zip

#    - name: Configure github pages
#      uses: actions/configure-pages@v1
#
#    - name: Upload built plugin to pages
#      uses: actions/upload-pages-artifact@v1
#      with:
#        path: ./build/distributions/
#
#    - name: Deploy built plugin to pages
#      id: deployment
#      uses: actions/deploy-pages@v1
