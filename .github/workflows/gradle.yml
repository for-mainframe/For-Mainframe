# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout of github repository
      uses: actions/checkout@v3

    - name: Setup of environment
      uses: ./.github/actions/setup

    - name: Check repopository content
      shell: bash
      run: pwd && ls -la

    - name: Cache Gradle packages
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle

#    - name: Build with Gradle
#      run: gradle wrapper && ./gradlew buildPlugin
#      shell: bash

    - name: Create zip archive
      shell: bash
      run: mkdir -p build && mkdir -p build/distributions && echo "Hello world" >> build/distributions/for-mainframe-0.7.1.zip

    - name: Publish built plugin
      uses: actions/upload-artifact@v3
      with:
        name: builtPlugin
        path: ./build/distributions/

#    - name: Sonarcloud scans
#      uses: ./.github/actions/sonar
#      env:
#        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}


  deploy:
    needs: build

    runs-on: XBY_IJMP_machine

    concurrency: test
    environment:
      name: test
      url: http://178.172.233.157/plugin-builds/${{steps.extract_branch.outputs.branch}}

    steps:
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: Check current directory
      shell: bash
      run: pwd && ls -la

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: builtPlugin
        path: ./build/distributions/

    - name: Check plugin built availability
      shell: bash
      run: ls -la ./build/distributions

    - name: Generate name for built plugin archive
      shell: bash
      run: TEMP_VAR1=$(grep -lir 'for-mainframe' build) && TEMP_VAR2="$(echo ${TEMP_VAR1%.zip*})."$(date +"%Y-%m-%dT%H:%M:%S%:z" | tr : _)".zip"

    - name: Move built plugin to destination folder
      shell: bash
      run: mkdir -p /var/www/plugin-builds/${{ steps.extract_branch.outputs.branch }} && mv $TEMP_VAR1 /var/www/plugin-builds/$git_branch/$TEMP_VAR2